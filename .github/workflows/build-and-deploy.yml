name: Build and deploy
on:
  workflow_dispatch:
    inputs:
      region:
        type: string
        default: ap-southeast-1
      doUploadCode:
        type: boolean
        default: true
      doStack02:
        type: boolean
        default: true

jobs:

  build-code:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'corretto'
      - name: Gradle build buildZip
        working-directory: ${{ github.workspace }}/function-code/event-sink-lambda
        run: ./gradlew --no-daemon clean build buildZip
      - uses: actions/upload-artifact@v3
        with:
          name: event-sink-lambda-zip
          path: ${{ github.workspace }}/function-code/event-sink-lambda/app/build/distributions/app.zip
          if-no-files-found: error

  provision-1:
    runs-on: ubuntu-latest
    environment: PersonalDev
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.key_id }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.secret_key }}
      AWS_REGION: ${{ inputs.region }}
    steps:
      - name: Checkout self
        uses: actions/checkout@v3
      - name: Provision cloudy01
        run: |
          aws cloudformation deploy --stack-name Cloudy01 --template-file $GITHUB_WORKSPACE/resources/cfn/cloudy01.yml --capabilities CAPABILITY_IAM

  deploy-code:
    needs: [build-code, provision-1]
    runs-on: ubuntu-latest
    environment: PersonalDev
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.key_id }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.secret_key }}
      AWS_REGION: ${{ inputs.region }}
    steps:
      - name: Checkout self
        uses: actions/checkout@v3
      - name: Download event-sink-lambda
        uses: actions/download-artifact@v3
        with:
          name: event-sink-lambda-zip
          path: ~/event-sink-lambda-zip
      - name: Upload event sink lambda code
        if: ${{ inputs.doUploadCode }}
        run: |
          bucketName=$(aws cloudformation list-exports | jq '.Exports[] | select(.Name=="Cloudy01-DeploymentBucketName").Value')
          bucketName=$(echo $bucketName | sed 's/\"//g')
          aws s3 cp ~/event-sink-lambda-zip/app.zip s3://$bucketName/event-sink-lambda.zip

  provision-2:
    needs: deploy-code
    runs-on: ubuntu-latest
    environment: PersonalDev
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.key_id }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.secret_key }}
      AWS_REGION: ${{ inputs.region }}
    steps:
      - name: Checkout self
        uses: actions/checkout@v3
      - name: Provision cloudy02
        if: ${{ inputs.doStack02 }}
        run: |
          aws cloudformation deploy --stack-name Cloudy02 --template-file $GITHUB_WORKSPACE/resources/cfn/cloudy02.yml --capabilities CAPABILITY_IAM

  update-lambda-code:
    needs: provision-2
    runs-on: ubuntu-latest
    environment: PersonalDev
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.key_id }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.secret_key }}
      AWS_REGION: ${{ inputs.region }}
    steps:
      - name: Checkout self
        uses: actions/checkout@v3
      - name: Update EventSinkLambda Code
        run: |
          lambdaName=$(aws lambda list-functions | jq '.Functions[].FunctionArn | select(test(".*EventSinkLambda.*";""))')
          lambdaName=$(echo $lambdaName | sed 's/\"//g')
          bucketName=$(aws cloudformation list-exports | jq '.Exports[] | select(.Name=="Cloudy01-DeploymentBucketName").Value')
          bucketName=$(echo $bucketName | sed 's/\"//g')
          aws lambda update-function-code --function-name $lambdaName --s3-bucket $bucketName --s3-key event-sink-lambda.zip
